{"version":3,"sources":["constants/constants.js","selectors/authSelectors.js","Components/UserMenu/UserMenu.js","Components/Header/Header.js","routes/Public.js","routes/Private.js","routes/routes.js","App.js","reducers/authReducers.js","reducers/reducers.js","store.js","index.js","actions/contactsActions.js","operations/contactOperations.js","operations/auth.js","actions/authAction.js","containers/Login/Login.js","containers/Register/Register.js","containers/Home/Home.js","selectors/selectors.js","Components/Guest.js","Components/Notifications/AlertMessage.js","Components/AddGuest.js","Components/GuestList/GuestList.js","Components/GuestListDataContainer/GuestListDataContainer.js","containers/Contacts/Contacts.js"],"names":["navigation","contacts","login","register","home","SEARCH","ACR","ACF","ACS","FCR","FCS","FCF","DCR","DCS","DCF","state","auth","user","email","connect","authSelectors","avatar","onLogout","authOperations","logOut","className","src","alt","width","height","type","onClick","to","getToken","token","Component","routeProps","render","props","restricted","lazy","App","this","onFetch","path","exact","component","Home","Login","Register","Contacts","mapDispatchToProps","contactOperations","getContacts","initialUserState","name","createReducer","authActions","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","storage","items","contactActions","onFetchSuccess","onAddSuccess","onDeleteSuccess","filter","contact","id","actionTypes","itemsReducer","reducers","persistConfig","key","whitelist","store","configureStore","reducer","persistReducer","authReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","onAddRequest","createAction","onAddFail","onFetchError","onDeleteContact","onDeleteFail","onSearch","e","target","value","onDelete","DELETE","addContact","dispatch","contactsActions","axios","post","then","response","data","catch","get","deleteContact","delete","defaults","headers","common","Authorization","registerOperation","userData","a","result","console","log","loginOperation","loginRequest","logoutRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","getCurrentUserSeccess","registerRequest","initialState","password","useState","form","setForm","useDispatch","inputHandler","onSubmit","preventDefault","placeholder","onChange","contactsSelector","filterSelector","getContactById","createSelector","contactId","find","getFilteredContact","toLowerCase","includes","ownProps","number","Notification","clearAlert","AddGuest","alertOn","setState","postNum","isNameExist","onAdd","some","item","CSSTransition","in","appear","timeout","classNames","unmountOnExit","role","aria-label","actions","search","TransitionGroup","map","GuestListDataContainer"],"mappings":"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","file":"static/js/main.a4b8e180.chunk.js","sourcesContent":["const SEARCH = \"@CONTACTS/SET_SEARCH\";\n\nconst ACR = \"@CONTACTS/ADD_REQUEST\";\nconst ACS = \"@CONTACTS/ADD_SUCCESS\";\nconst ACF = \"@CONTACTS/ADD_FAIL\";\n\nconst FCR = \"@CONTACTS/FETCH_REQUEST\";\nconst FCS = \"@CONTACTS/FETCH_SUCCESS\";\nconst FCF = \"@CONTACTS/FETCH_FAIL\";\n\nconst DCR = \"@CONTACTS/DELETE_CONTACT_REQUEST\";\nconst DCS = \"@CONTACTS/DELETE_CONTACT_SUCCESS\";\nconst DCF = \"@CONTACTS/DELETE_CONTACT_FAIL\";\n\nexport const navigation = {\n  contacts: \"/contacts\",\n  login: \"/login\",\n  register: \"/register\",\n  home: \"/\",\n};\n\nexport default {\n  SEARCH,\n  ACR,\n  ACF,\n  ACS,\n  FCR,\n  FCS,\n  FCF,\n  DCR,\n  DCS,\n  DCF,\n};\n","const isAuthenticated = (state) => state.auth.token;\n\nconst getUserEmail = (state) => state.auth.user.email;\n\nexport default { isAuthenticated, getUserEmail };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../../operations/auth\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from \"../../constants/constants\";\nimport authSelectors from \"../../selectors/authSelectors\";\nimport \"./UserMenu.css\";\n\nconst UserMenu = ({ avatar, email, onLogout }) => {\n  return (\n    <>\n      <div className=\"avatar-wrapper\">\n        <div className=\"account-avatar\">\n          <img\n            className=\"avatar avatar--hover\"\n            src={avatar}\n            alt=\"User avatar\"\n            width=\"44\"\n            height=\"44\"\n          />\n        </div>\n        <span className=\"account-title\">{email}</span>\n        <button className=\"logout-btn\" type=\"button\" onClick={onLogout}>\n          Logout\n        </button>\n      </div>\n      <div>\n        <NavLink to={navigation.contacts}>Contacts</NavLink>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  email: authSelectors.getUserEmail(state),\n  avatar:\n    \"https://cdn1.vectorstock.com/i/1000x1000/31/95/user-sign-icon-person-symbol-human-avatar-vector-12693195.jpg\",\n});\n\nexport default connect(mapStateToProps, {\n  onLogout: authOperations.logOut,\n})(UserMenu);\n","import React from \"react\";\nimport { navigation } from \"../../constants/constants\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport UserMenu from \"../../Components/UserMenu/UserMenu\";\nimport \"./Header.css\";\n\nconst Header = ({ getToken }) => {\n  return (\n    <header className=\"header\">\n      {getToken ? (\n        <UserMenu />\n      ) : (\n        <ul>\n          <li className=\"nav-menu\">\n            <NavLink to={navigation.login}>Login</NavLink>\n          </li>\n          <li className=\"nav-menu\">\n            <NavLink to={navigation.register}>Register</NavLink>\n          </li>\n          <li className=\"nav-menu\">\n            <NavLink to={navigation.contacts}>Contacts</NavLink>\n          </li>\n          <li className=\"nav-menu\">\n            <NavLink to={navigation.home}>Home</NavLink>\n          </li>\n        </ul>\n      )}\n    </header>\n  );\n};\n\nconst mapStateToProps = (state) => ({ getToken: state.auth.token });\n\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { navigation } from \"../constants/constants\";\n\nconst Public = ({ getToken, Component, ...routeProps }) => {\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        getToken && routeProps.restricted ? (\n          <Redirect to={navigation.contacts} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({ getToken: state.auth.token });\n\nexport default connect(mapStateToProps)(Public);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { navigation } from \"../constants/constants\";\n\nconst Private = ({ getToken, Component, ...routeProps }) => {\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        getToken ? <Component {...props} /> : <Redirect to={navigation.login} />\n      }\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({ getToken: state.auth.token });\n\nexport default connect(mapStateToProps)(Private);\n","import { lazy } from \"react\";\nimport { navigation } from \"../constants/constants\";\n\nexport default [\n  {\n    path: navigation.home,\n    label: \"Home\",\n    exact: true,\n    component: lazy(() => import(\"../containers/Home/Home\")),\n    private: false,\n    restricted: false,\n  },\n  {\n    path: navigation.register,\n    label: \"Register\",\n    exact: true,\n    component: lazy(() => import(\"../containers/Register/Register\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: navigation.login,\n    label: \"Login\",\n    exact: true,\n    component: lazy(() => import(\"../containers/Login/Login\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: navigation.contacts,\n    label: \"Contacts\",\n    exact: true,\n    component: lazy(() => import(\"../containers/Contacts/Contacts\")),\n    private: true,\n    restricted: false,\n  },\n];\n","import React, { useEffect, Component, Suspense } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Contacts from \"./containers/Contacts/Contacts\";\nimport Login from \"./containers/Login/Login\";\nimport Register from \"./containers/Register/Register\";\nimport Home from \"./containers/Home/Home\";\nimport { navigation } from \"./constants/constants\";\nimport Header from \"./Components/Header/Header\";\nimport { useSelector } from \"react-redux\";\nimport Public from \"./routes/Public\";\nimport Private from \"./routes/Private\";\nimport { connect } from \"react-redux\";\nimport routes from \"./routes/routes\";\nimport contactOperations from \"./operations/contactOperations\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetch();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header />\n          <hr />\n          <Switch>\n            <Public path=\"/\" exact component={Home} restricted={false} />\n            <Public\n              path={navigation.login}\n              exact\n              component={Login}\n              restricted={true}\n            />\n            <Public\n              path={navigation.register}\n              component={Register}\n              restricted={true}\n            />\n            <Private Component={Contacts} path={navigation.contacts} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onFetch: contactOperations.getContacts,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n\n// import GuestPhonebook from \"./Components/GuestPhonebook/GuestPhonebook\";\n// import contactOperations from \"./operations/contactOperations\";\n// import { connect } from \"react-redux\";\n\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.onFetch();\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <GuestPhonebook />\n//       </div>\n//     );\n//   }\n// }\n// const mapDispatchToProps = {\n//   onFetch: contactOperations.getContacts,\n// };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport authActions from \"../actions/authAction\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport const authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport actionTypes from \"../constants/constants\";\nimport contactActions from \"../actions/contactsActions\";\n\nconst deleteContact = (state, { payload }) =>\n  state.filter((contact) => contact.id !== payload);\n\nconst items = createReducer([], {\n  [contactActions.onFetchSuccess]: (state, { payload }) => payload,\n  [contactActions.onAddSuccess]: (state, { payload }) => [...state, payload],\n  [contactActions.onDeleteSuccess]: deleteContact,\n});\n\nconst filter = createReducer(\"\", {\n  [actionTypes.SEARCH]: (state, { payload }) => (state = payload),\n});\n\nexport default { items, filter };\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers, applyMiddleware } from \"redux\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  REGISTER,\n  PAUSE,\n  PERSIST,\n  PURGE,\n} from \"redux-persist\";\nimport authReduser from \"./reducers/authReducers\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/reducers\";\n\nconst itemsReducer = combineReducers({\n  items: reducers.items,\n  filter: reducers.filter,\n});\n\nconst persistConfig = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: itemsReducer,\n    auth: persistReducer(persistConfig, authReduser),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport { store, persistor } from \"./store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import actionTypes from \"../constants/constants\";\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { SET_TOKEN, RESET_TOKEN } from \"../constants/tokenConstants\";\n\nconst onAddRequest = createAction(actionTypes.ACR);\nconst onAddSuccess = createAction(actionTypes.ACS);\nconst onAddFail = createAction(actionTypes.ACF);\n\nconst onFetch = createAction(actionTypes.FCR);\nconst onFetchSuccess = createAction(actionTypes.FCS);\nconst onFetchError = createAction(actionTypes.FCF);\n\nconst onDeleteContact = createAction(actionTypes.DCR);\nconst onDeleteSuccess = createAction(actionTypes.DCS);\nconst onDeleteFail = createAction(actionTypes.DCF);\n\nconst onSearch = createAction(actionTypes.SEARCH, (e) => ({\n  payload: e.target.value,\n}));\n\nconst onDelete = createAction(actionTypes.DELETE, (e) => ({\n  payload: e.target.id,\n}));\n\nexport const SET_ERROR = \"@error/set\";\nexport const RESET_ERROR = \"@error/reset\";\n\nexport const setError = (text) => ({\n  type: SET_ERROR,\n  payload: text,\n});\n\nexport const resetError = () => ({\n  type: RESET_ERROR,\n});\n\nexport const LOADER_ON = \"@loader/on\";\nexport const LOADER_OFF = \"@loader/off\";\n\nexport const loaderOn = () => ({\n  type: LOADER_ON,\n});\n\nexport const loaderOff = () => ({\n  type: LOADER_OFF,\n});\n\nexport const setToken = (token) => ({\n  type: SET_TOKEN,\n  payload: token,\n});\n\nexport const resetToken = () => ({\n  type: RESET_TOKEN,\n});\n\nexport default {\n  onDelete,\n  onSearch,\n  onAddRequest,\n  onAddSuccess,\n  onAddFail,\n  onFetch,\n  onFetchSuccess,\n  onFetchError,\n  onDeleteContact,\n  onDeleteSuccess,\n  onDeleteFail,\n};\n","import contactsActions from \"../actions/contactsActions\";\nimport axios from \"axios\";\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(contactsActions.onAddRequest());\n  axios\n    .post(\"http://localhost:2000/contacts\", { ...contact })\n    .then((response) => dispatch(contactsActions.onAddSuccess(response.data)))\n    .catch((error) => dispatch(contactsActions.onAddFail(error)));\n};\n\nconst getContacts = () => (dispatch) => {\n  dispatch(contactsActions.onFetch());\n  axios\n    .get(\"http://localhost:2000/contacts\")\n    .then((response) => dispatch(contactsActions.onFetchSuccess(response.data)))\n    .catch((error) => dispatch(contactsActions.onFetchError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(contactsActions.onDeleteContact());\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactsActions.onDeleteSuccess(id)))\n    .catch((error) => dispatch(contactsActions.onDeleteFail(error)));\n};\n\nexport default {\n  addContact,\n  getContacts,\n  deleteContact,\n};\n","import axios from \"axios\";\nimport authActions from \"../actions/authAction\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const registerOperation = (userData) => async (dispatch) => {\n  try {\n    const result = await axios.post(\n      \"https://goit-phonebook-api.herokuapp.com/users/signup\",\n      userData\n    );\n    token.set(result.data.token);\n    dispatch(authActions.registerSuccess(result.data));\n    console.log(result.data);\n  } catch (error) {\n    dispatch(authActions.registerError(error));\n  }\n};\n\nexport const loginOperation = (userData) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n  try {\n    const result = await axios.post(\n      \"https://goit-phonebook-api.herokuapp.com/users/login\",\n      userData\n    );\n    token.set(result.data.token);\n    dispatch(authActions.loginSuccess(result.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error));\n  }\n};\n\nconst logOut = () => (dispatch) => {\n  dispatch(authActions.logoutRequest());\n  axios\n    .post(\"https://goit-phonebook-api.herokuapp.com/users/logout\")\n    .then(() => {\n      token.unset();\n      dispatch(authActions.logoutSuccess());\n    })\n    .catch((error) => dispatch(authActions.logoutError(error)));\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const result = await axios.get(\"/users/current\");\n    dispatch(authActions.getCurrentUserSeccess(result.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error));\n  }\n};\n\nexport default { registerOperation, loginOperation, logOut, getCurrentUser };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"@auth/registerRequest\");\nconst registerSuccess = createAction(\"@auth/registerSuccess\");\nconst registerError = createAction(\"@auth/registerError\");\n\nconst loginRequest = createAction(\"@auth/loginRequest\");\nconst loginSuccess = createAction(\"@auth/loginSuccess\");\nconst loginError = createAction(\"@auth/loginError\");\n\nconst logoutRequest = createAction(\"@auth/logoutRequest\");\nconst logoutSuccess = createAction(\"@auth/logoutSuccess\");\nconst logoutError = createAction(\"@auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"@auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"@auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"@auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  loginRequest,\n  logoutRequest,\n  getCurrentUserRequest,\n  registerError,\n  loginError,\n  logoutError,\n  getCurrentUserError,\n  registerSuccess,\n  loginSuccess,\n  logoutSuccess,\n  getCurrentUserSuccess,\n};\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from \"../../constants/constants\";\nimport { useDispatch } from \"react-redux\";\nimport \"./Login.css\";\nimport { loginOperation } from \"../../operations/auth\";\n\nconst initialState = { email: \"\", password: \"\" };\n\nconst Login = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n  const inputHandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({ ...state, [name]: value }));\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    dispatch(loginOperation(form));\n    console.log(form);\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n      <form className=\"login-form\" onSubmit={submit}>\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          name=\"email\"\n          onChange={inputHandler}\n          value={form.email}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={inputHandler}\n          value={form.password}\n        />\n        <button>Sign in</button>\n        <p>\n          You don`t have any account? Please\n          <NavLink to={navigation.register}>&nbsp;register</NavLink>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { registerOperation } from \"../../operations/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from \"../../constants/constants\";\nimport \"./Register.css\";\n\nconst initialState = { name: \"\", email: \"\", password: \"\" };\nconst Register = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n  const inputHandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({ ...state, [name]: value }));\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    dispatch(registerOperation(form));\n  };\n\n  return (\n    <div>\n      <h1>Registration</h1>\n      <form className=\"register-form\" onSubmit={submit}>\n        <input\n          type=\"text\"\n          placeholder=\"name\"\n          name=\"name\"\n          onChange={inputHandler}\n          value={form.name}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          name=\"email\"\n          onChange={inputHandler}\n          value={form.email}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={inputHandler}\n          value={form.password}\n        />\n        <button>Sign up</button>\n        <p>\n          If you already have an account please\n          <NavLink to={navigation.login}>log in</NavLink>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1 className=\"Home-title\">Welcome to phonebook application!</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import { createSelector } from \"@reduxjs/toolkit\";\nexport const contactsSelector = (state) => state.contacts.items;\nexport const filterSelector = (state) => state.contacts.filter;\n\nexport const getContactById = createSelector(\n  [contactsSelector, (_, contactId) => contactId],\n  (items, contactId) => items.find((contact) => contact.id === contactId)\n);\n\nexport const getFilteredContact = createSelector(\n  [contactsSelector, filterSelector],\n  (items, filter) =>\n    items.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContactById } from \"../selectors/selectors\";\nimport contactOperations from \"../operations/contactOperations\";\n\nconst Guest = ({ name, number, onDelete }) => {\n  return (\n    <div className=\"contact\">\n      <h2 className=\"contactName\">{name}</h2>\n      <p>{number}</p>\n      <button className=\"delete\" onClick={onDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const user = getContactById(state, ownProps.id);\n  return { ...user };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onDelete: () => dispatch(contactOperations.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Guest);\n","import React from \"react\";\nimport \"./AlertMessage.css\";\n\nconst Notification = ({ name, clearAlert }) => {\n  return (\n    <div className=\"wrapper\">\n      <h2>Contact of {name} is already in the list.</h2>\n      <p>Please enter the number which is not in the list.</p>\n      <button onClick={clearAlert}>Close</button>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport AlertMessage from \"./Notifications/AlertMessage\";\nimport { connect } from \"react-redux\";\nimport contactOperations from \"../operations/contactOperations\";\nimport \"./Notifications/AlertAnimation.css\";\n\nclass AddGuest extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    alertOn: false,\n  };\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  isNameExist(name) {\n    const result = this.props.contacts.some(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    );\n    if (result) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  postNum = () => {\n    if (this.isNameExist(this.state.name)) {\n      this.props.onAdd(this.state);\n      this.setState({ name: \"\", number: \"\" });\n    } else {\n      this.setState({ alertOn: true });\n    }\n  };\n\n  clearAlert = () => {\n    this.setState({ alertOn: false });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"phoneBookApp\">\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames=\"logo-slideIn\"\n            unmountOnExit\n          >\n            <h1 className=\"logo\">\n              <span role=\"img\" aria-label=\"cool\">\n                😎\n              </span>\n              Phonebook\n              <span role=\"img\" aria-label=\"cool\">\n                😎\n              </span>\n            </h1>\n          </CSSTransition>\n          <div className=\"addContactForm\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.inputHandler}\n              placeholder=\"Name\"\n            />\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.inputHandler}\n              placeholder=\"Number\"\n            />\n            <button className=\"addGuest\" onClick={this.postNum}>\n              Add Guest\n            </button>\n            <CSSTransition\n              in={this.state.alertOn}\n              timeout={300}\n              classNames=\"wrapper\"\n              unmountOnExit\n            >\n              <AlertMessage\n                name={this.state.name}\n                clearAlert={this.clearAlert}\n              />\n            </CSSTransition>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  onAdd: contactOperations.addContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddGuest);\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Guest from \"../Guest\";\nimport AddGuest from \"../AddGuest\";\nimport actions from \"../../actions/contactsActions\";\nimport { connect } from \"react-redux\";\nimport contactOperations from \"../../operations/contactOperations\";\nimport { filterSelector, getFilteredContact } from \"../../selectors/selectors\";\n\nimport \"../Notifications/AlertAnimation.css\";\n\nconst GuestList = ({ onAdd, search, onSearch, contacts }) => (\n  <div className=\"phoneBookList\">\n    <AddGuest contacts={contacts} onAdd={onAdd} />\n    <div className=\"Guest\">\n      <input\n        type=\"text\"\n        value={search}\n        onChange={onSearch}\n        className=\"filter\"\n        placeholder=\"Find contact by name\"\n      />\n      <TransitionGroup className=\"Guests\">\n        {contacts.map((user) => (\n          <CSSTransition\n            key={user.id}\n            timeout={250}\n            classNames=\"Guests-item-fade\"\n            unmountOnExit\n          >\n            <Guest id={user.id} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  filter: filterSelector(state),\n  contacts: getFilteredContact(state),\n});\n\nconst mapDispatchToProps = {\n  onAdd: contactOperations.addContact,\n  onSearch: actions.onSearch,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestList);\n","import React, { Component } from \"react\";\nimport GuestList from \"../GuestList/GuestList\";\n\nclass GuestListDataContainer extends Component {\n  render() {\n    return <GuestList />;\n  }\n}\n\nexport default GuestListDataContainer;\n","import React from \"react\";\nimport GuestListDataContainer from \"../../Components/GuestListDataContainer/GuestListDataContainer\";\nimport \"./Contacts.css\";\n\nconst Contacts = () => {\n  return <GuestListDataContainer />;\n};\n\nexport default Contacts;\n"],"sourceRoot":""}